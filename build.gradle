buildscript {
    repositories {
        maven {
            url = 'https://maven.minecraftforge.net'
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = 'com.blukzen.createlab'
archivesBaseName = 'createlab'
version = (String) ['sh', '-c', 'git describe --tags'].execute().text.trim()

if (version.matches("^v((\\d+\\.)?(\\d+\\.)?(\\*|\\d+)-){2}(\\d*)-([a-z|\\d]*)")) {
    version = (String) "${version}-SNAPSHOT"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('CreateLab ' + this.version)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    mappings channel: 'official', version: '1.16.5'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                createlab {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args 'nogui'

            mods {
                createlab {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'createlab', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                createlab {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.20'
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.3:api")

    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:1.16.5-4.0.5.3")
    runtimeOnly fg.deobf("curse.maven:improvedbackpacks-270457:3509641")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "createlab",
                "Specification-Vendor"    : "createlab",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${this.version}",
                "Implementation-Vendor"   : "createlab",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

def getSecrets() {
    Properties props = new Properties()
    if (file('../local.properties').exists()) {
        props.load(new FileInputStream(file('../secrets.properties')))
    }
    return props
}

Properties secrets = getSecrets()

publishing {

    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            name "repsy"
            url "https://repsy.io/mvn/blukzen/minecraft/"
            credentials {
                username =  secrets["REPSY_USERNAME"]
                password = secrets["REPSY_PASSWORD"]
            }
        }
    }
}